classe h_cmd_atalho
herda comando_comum
const posic = 0
const txtajuda = txtajuda1 + m_ajuda
const txtajuda1 = "\b\c3Atalho\b\n\
Sintaxe: ATALHO\n\
         ATALHO <nome>\n\
         ATALHO <nome> <comandos>\n\
         ATALHO LIMPAR\n\
         !\n\n"
#
const m_ajuda = "O sinal de exclamação repete o último comando que você digitou.\n\n\
Já o comando ATALHO, permite definir atalhos para os comandos que você usa\n\
frequentemente. Para criar um atalho, basta teclar a palavra atalho seguido\n\
de um nome qualquer e o comando. Assim, sempre que você digitar o nome,\n\
o efeito será o mesmo que digitar o comando correspondente.\n\n\
Para apagar um atalho, basta digitar a palavra atalho seguido do nome.\n\n\
Para apagar todos os atalhos, digite atalho limpar.\n\n\
Digitando apenas a palavra atalho, mostra todos os atalhos definidos.\n\n\
As seguintes sequências de caracteres têm um significado especial:\n\
 \c2$1\b  Primeira palavra digitada após o nome do atalho\n\
 \c2$2\b  Segunda palavra digitada após o nome do atalho\n\
 \c2$3\b a \c2$9\b  Terceira à nona palavra digitada após o nome do atalho\n\
 \c2$0\b  Todas as palavras\n\
 \c2$S\b  Da segunda palavra em diante\n\
 \c2$T\b  Da terceira palavra em diante\n\
 \c2$Z\b  Uma quebra de linha (para separar dois comandos)\n\
 \c2$$\b  O Caracter $\n\n\
Nota: Para percorrer longas distâncias, não é preciso colocar $Z entre\n\
as direções. Vide \c2AJUDA MOVER\b\n\n\
Exemplos:\n\n\
atalho med sentar $Z meditar\n\
  Cria o atalho med. Depois disso, digitar med terá o mesmo efeito\n\
  de digitar sentar, e em seguida, digitar meditar.\n\n\
atalho con lançar \"raio confusão\" $1\n\
  Cria o atalho chamado con. Digitando, por exemplo, con silva,\n\
  terá o mesmo efeito de digitar lançar \"raio confusão\" silva.\n\n\
atalho med\n\
  Apaga o atalho med, se existir."
#
const v_maximo = 50 # Quantidade máxima de atalhos
const m_nenhum = "Nenhum atalho definido."
const m_nao_existe = "Atalho não foi definido: $m"
const m_atalho = "Não é possível criar um atalho chamado atalho."
const m_igual = "Nomes de atalhos não podem ter o sinal de igual."
const m_criou = "Criado atalho: $m"
const m_mudou = "Atalho mudado: $m"
const m_apagou = "Atalho apagado: $m"
const m_limpou = "Atalhos apagados."
const admordem = "m_ajuda v_maximo m_nenhum m_nao_existe m_atalho m_igual\n\
m_criou m_mudou m_apagou m_limpou"

func escr
  $mens.mens = arg1
  se !arg1
    refvar t = arg0.sock.txtmais
    t.limpar
    txt100 nome
    epara nome = arg0.var.ini("t_"), nome, nome = arg0.var.depois(nome, "t_")
      t.addfim(txt(nome, 2) + " " + arg0.var.[nome])
    efim
    ret t.linhas == 0, $mens.mp(m_nenhum, arg0)
    t.addini("\b\c6Atalhos(" + t.linhas + "):\b")
    arg0.sock.txtmostra
  senao arg1 == "limpar"
    ret !arg0.var.ini("t_"), $mens.mp(m_nenhum, arg0)
    arg0.var.limpar("t_")
    $mens.mp(m_limpou, arg0)
  senao !txt2(arg1)
    ret !arg0.var.t_[arg1], $mens.mp(m_nao_existe, arg0)
    arg0.var.t_[arg1] = ""
    $mens.mp(m_apagou, arg0)
  senao txt1(arg1) == "atalho"
    $mens.mp(m_atalho, arg0)
  senao txtproc(txt1(arg1), "=") >= 0
    $mens.mp(m_igual, arg0)
  senao arg0.var.t_[txt1(arg1)]
    arg0.var.t_[txt1(arg1)] = txt2(arg1)
    $mens.mp(m_mudou, arg0)
  senao
    se arg0.var.total("t_") >= v_maximo
      ret arg0.msg("Atingido limite de atalhos.")
    fimse
    arg0.var.t_[txt1(arg1)] = txt2(arg1)
    $mens.mp(m_criou, arg0)
  fimse


classe m_cmd_atalho
herda comando_menu_cmd
#
const nome1 = "Ajuda"
const tipo1 = "opc_texto"
const clas1 = "cmd_atalho"
const vari1 = "m_ajuda"
#
const nome2 = "Nenhum atalho"
const tipo2 = "opc_linha"
const clas2 = "cmd_atalho"
const vari2 = "m_nenhum"
#
const nome3 = "Não existe"
const tipo3 = "opc_linha"
const clas3 = "cmd_atalho"
const vari3 = "m_nao_existe"
#
const nome4 = "Atalho Atalho"
const tipo4 = "opc_linha"
const clas4 = "cmd_atalho"
const vari4 = "m_atalho"
#
const nome5 = "Sinal de igual"
const tipo5 = "opc_linha"
const clas5 = "cmd_atalho"
const vari5 = "m_igual"
#
const nome6 = "Criou"
const tipo6 = "opc_linha"
const clas6 = "cmd_atalho"
const vari6 = "m_criou"
#
const nome7 = "Mudou"
const tipo7 = "opc_linha"
const clas7 = "cmd_atalho"
const vari7 = "m_mudou"
#
const nome8 = "Apagou"
const tipo8 = "opc_linha"
const clas8 = "cmd_atalho"
const vari8 = "m_apagou"
#
const nome9 = "Apagou todos"
const tipo9 = "opc_linha"
const clas9 = "cmd_atalho"
const vari9 = "m_limpou"
#
const nome10 = "Atalhos"
const info10 = "Quantidade máxima de atalhos (comando Atalho)"
const tipo10 = "opc_numero"
const clas10 = "cmd_atalho"
const vari10 = "v_maximo"
