classe cmd_config
herda comando_comum
const posic = 0
const ajudaini = "\b\c3Config\b\n\
Sintaxe: CONFIG +<opção>\n\
         CONFIG -<opção>\n\
Altera algumas preferências do seu personagem. Um sinal de + ou de -\n\
seguido de uma opção ativa ou desativa a opção. Para saber as atuais\n\
preferências, tecle apenas CONFIG, sem parâmetros.\n\n\
As opções são:"
#
const m_desc = "Mostra descrições completas (como ao digitar OLHAR)"
const m_saidas = "Mostra as saídas visíveis após a descrição da sala"
const m_cores = "Recebe sequência de cores no padrão ANSI (somente Telnet)"
const m_acento = "Recebe letras com acentuação (codificação ISO8859-1)"
const m_telepatia = "Recebe mensagens com o comando Telepatia"
const m_chat = "Participa do canal de comunicação CHAT"
const m_novatos = "Participa do canal de comunicação NOVATOS"
const m_emocao = "Mostra (e) nas mensagens geradas com esse comando"
const m_seguir = "Se outros personagens podem escolher seguir você"
const m_moedas = "Pega as moedas do corpo do personagem após vencer uma batalha"
const m_prompt = "Ativa o prompt normal"
const m_bprompt = "Ativa o prompt de batalha"
const m_som1 = "Ativa efeitos sonoros via MSP com volume baixo"
const m_som2 = "Ativa efeitos sonoros via MSP com volume médio\n\
            Nota 1: Para volume máximo, usar CONFIG +SOM1 +SOM2\n\
            Nota 2: é necessário usar um cliente de MUD com suporte a MSP\n\
            (MUD Sound Protocol) e baixar e instalar os sons do MUD"
const m_dicas = "Mostra dicas aleatórias de tempos em tempos"
const m_imortal = "Não morre em batalha, sempre consegue fugir, enxerga tudo exceto\n\
            cego e no escuro, tranca e destranca tudo, atravessa coisas\n\
            fechadas, anda sem gastar movimento,\n\
            não sai do jogo após algum tempo sem digitar nada"
const m_sala = "Mostra o nome da sala cadastrada antes do título"
const m_invquem = "Ocultar a presença no comando quem"
const m_invsala = "Invisível a não administradores"
const m_ac = "Participa do canal de comunicação AC (administração)"
const m_admlog = "Canal ADMLOG - é informado sobre mudanças online no MUD"
const m_cmdlog = "Canal CMDLOG - é informado quando alguém usar Cmd, Cmdp,\n\
            Cmdj, ApagarSav, MudaNome, Ban ou teleportar outro jogador"
const m_execlog = "Canal EXECLOG - só tem utilidade para programadores\n\
            informa quando a variável exec chegar a 0 (bug no programa)"
#
# As próximas constantes são as opções do comando CONFIG
# Cada constante contém o índice da variável de jogconfig
# As variáveis "opc_" contém o int1 de jogconfig que correspondente à opção
const opc_desc = 0
const opc_saidas = 1
const opc_cores = 2
const opc_acento = 3
const opc_chat = config:chattipo ? 4
const opc_seguir = 5
const opc_prompt = 6
const opc_bprompt = 7
const opc_telepatia = 8
const opc_emocao = config:emocaotipo ? 9
const opc_moedas = 10
const opc_novatos = config:novatostipo ? 11
const opc_dicas = 12
const opc_som1 = 13
const opc_som2 = 14
const opc_execlog = arg0 & 0x80 ? 15
const opc_sala = arg0 & 2 ? 16
const opc_invquem = arg0 & 4 ? 17
const opc_invsala = arg0 & 8 ? 18
const opc_ac = arg0 & 0x10 ? 19
const opc_imortal = arg0 & 1 ? 20
const opc_admlog = arg0 & 0x20 ? 21
const opc_cmdlog = arg0 & 0x40 ? 22
#
# Ordem das opções em AJUDA CONFIG
const opcoes = "desc saidas cores acento telepatia chat novatos emocao seguir moedas prompt \
bprompt som1 som2 dicas imortal sala invquem invsala ac admlog cmdlog execlog"

func txtajuda
  refvar perm = $perm_[arg0.jogperm].c_config
  txt512 lin
  textotxt t
  t.addfim(ajudaini)
  epara lin = opcoes, lin, lin = txt2(lin)
    refvar nome = txt1(lin)
    continuar !txt(opc_[nome](perm))
    refvar l = "  \c2" + txtmai(nome) + "\b "
    t.addfim(l + txtesp(15 - inttotal(l)) + m_[nome])
  efim
  ret t.remove(1000)

func escr
  refvar perm = $perm_[arg0.jogperm].c_config
  prog p
  txt512 x
  txt512 y
  int1 opc.32
  opc.bits = arg0.jogconfig.bits
  se !arg1
    epara p.inifunc(este, "opc_"), p.lin, p.depois
      refvar atual = [p.texto](perm)
      se !txt(atual)
      senao opc.[atual]
        x += " +" + txtmai(txt(p.texto, 4))
      senao
        y += " -" + txtmin(txt(p.texto, 4))
      fimse
    efim
    arg0.msg("CONFIG" + x + y)
    ret
  fimse
  x = txttroca(arg1, "+", " +")
  x = txttroca(x, "-", " -")
  x = txtremove(x, "EMD")
  txt512 mudou
  enquanto x
    epara p.inifunc(este, "opc_" + txt(txt1(x), 1)), p.lin, p.depois
      refvar atual = [p.texto](perm)
      continuar !txt(atual)
      se txt(x, 0, 1) == "+"
        opc.[atual] = 1
        mudou += " +" + txtmai(txt(p.texto, 4))
      senao txt(x, 0, 1) == "-"
        opc.[atual] = 0
        mudou += " -" + txtmin(txt(p.texto, 4))
      senao
        y += " " + txt1(x)
      fimse
      sair
    efim
    !p.lin && (y += " " + txt1(x))
    x = txt2(x)
  efim
  ret y, arg0.msg("Opção inexistente:" + y)
# Checa a propriedade SOM
  se arg0.jogconfig.13 != opc.13 || arg0.jogconfig.14 != opc.14 && arg0.sock.msgsom_t
    se !opc.13 && !opc.14
      arg0.sock.msgsock("!!MUSIC(off)")
      arg0.sock.msgsom_t = ""
    senao
      refvar som = arg0.sock.msgsom_t
      refvar lin = $som_[som].var.["som" + opc.14 + opc.13]
      lin && arg0.sock.msgsock(lin)
    fimse
  fimse
# Checa a propriedade INVIS
  se arg0.jogconfig.18 != opc.18 # Se a propriedade INVIS mudou
    arg0.recalc = 1 # Deverá atualizar bitinv
  fimse
# Checa a propriedade IMORTAL
  se arg0.jogconfig.20 != opc.20 # Se a propriedade IMORTAL mudou
    arg0.recalc = 1 # Deverá atualizar bitver
    arg0.sock.jogconfig.bits = opc.bits # Para função temposair
    arg0.sock.temposair # Atualiza tempo para sair do MUD
  fimse
# Checa a propriedade SEGUIR
  se !opc.5 # Se não pode ser seguido
    listaitem i
    i = arg0.lseguir.ini
    enquanto i
      se i.obj.tseguir == 0 || i.obj.tseguir == 2
        i.obj.msg("Você pára de seguir " + arg0.descnome + ".")
        i.removedepois
      senao
        i.depois
      fimse
    efim
  fimse
# Atualiza a configuração
  arg0.jogconfig.bits = opc.bits
  arg0.sock.jogconfig.bits = opc.bits
  arg0.msg("\bConfiguração alterada:" + mudou)
