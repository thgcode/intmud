classe cmd_remover
herda comando_comum
const txtajuda = "\b\c3Remover\b\n\
Sintaxe: REMOVER <objeto>\n\
         REMOVER <quantidade> <objeto>\n\
Seu personagem deixa de usar um objeto que está vestindo ou usando.\n\
Para remover tudo (até 10 objetos) tecle TUDO ao invés do objeto."
const posic = 5

func escr
  ret !arg1, arg0.msg("Remover o que?")
  refvar perm_msg = $perm_[arg0.jogperm].vestir
  ret perm_msg, $mensjog.msg(perm_msg, arg0)
  refvar alvo = ref(arg0.persoesc) # Quem vai remover
# Preenche a variável vest com o que está vestindo
  txt12 vest # Aonde está vestindo
  listaitem item
  epara item = alvo.dentro2.ini, item, item.depois
    vest |= intbith(item.obj.vestpos - 1)
  efim
# Remove
  uint8 total
  listaobj l
  nomeobj n # Para reconhecer os itens
  n.ini(arg1, misc:objmax, misc:tudo)
  epara l.addfim(alvo.dentro2), l, l.ini.remove
    ref r = l.objini
    continuar !r.vestpos || !r.visivel(arg0) || !n.nome(r.ident, r.objtot)
    total++
    refvar valor = vest & txt(config:vestir[r.vestpos - 1])
    se txttroca(valor, "0", "")
      listaitem item
      epara item = alvo.dentro2.ini, item, item.depois
        continuar !item.obj.vestpos
        sair valor & intbith(item.obj.vestpos - 1)
      efim
      alvo.msg("Antes precisa parar de usar " + item.obj.descnome + ".")
      continuar
    fimse
    refvar posic = int(r.vestpos)
    listaobj e
    epara e.addfim(alvo.evento), e, e.ini.remove
      ret e.objini.cmd_remover(alvo, r, posic, alvo), nulo
    efim
    epara e.addfim(r.evento), e, e.ini.remove
      ret e.objini.cmd_remover(alvo, r, posic, r), nulo
    efim
    vest &= ~txthex(intbith(r.vestpos - 1), 12)
    refvar som = r.vestpos == 50 ? r.i_som_emp0 : r.i_som_vest0
    r.vestir(0)
    $mens.p(alvo, nulo, r)
    $mens.mvis1som("$P remove $o.", som)
    epara e.addfim(alvo.evento), e, e.ini.remove
      e.objini.cmd_removeu(alvo, r, posic, alvo)
    efim
    epara e.addfim(r.evento), e, e.ini.remove
      e.objini.cmd_removeu(alvo, r, posic, r)
    efim
  efim
# Ajusta variáveis
  !total && $mens.p(alvo) + $mens.mperso("$P não está usando isso.")
