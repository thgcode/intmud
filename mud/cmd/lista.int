classe cmd_lista
herda comando_comum, comum_negociar
const txtajuda = "\b\c3Lista\b\n\
Sintaxe: LISTA [item]\n\
Sem argumentos mostra a lista de produtos sendo vendidos.\n\
Seguido de um nome ou número mostra informações sobre um produto."
const posic = 5

func escr
  arg1 ? escr2(arg0, arg1) : escr1(arg0)

func escr1 # Consultar a lista de itens
  uint32 valor # Valor do item
  uint32 nivel # Nível do item
  real2 lucro # Para calcular o lucro do vendedor
  txt200 lin
  int32 linha
  textotxt t
  listaobj l
  linha = 1, l.addfim(arg0.dono.dentro2)
  epara l.remove(arg0), l, l.ini.remove
    refvar p = ref(l.objini) # Personagem que está sendo verificado
    continuar !(p.lojaitem || p.lojainv || $s_[p.lojasala] || $a_[p.lojacasa] || $a_[p.lojachave]\
)
    lin = negociar_msg(arg0, p)
    continuar lin == "\b"
    ret lin, arg0.msg(lin)
    se lin = evento(arg0, p) # Nota: atribui mensagem a lin e checa se lin!=""
      t.addfim(txtcopiamai(p.descnome, "A") + ": " + lin)
      continuar
    fimse
    t.addfim("\b\c6" + txtcopiamai(p.descnome, "A") + " informa:\b")
    lucro = (100 + p.taxavenda) / 100
# Itens fixos - lojaitem
    se 1
      textotxt t2
      t2.addfim(p.lojaitem)
      enquanto t2.linhas
        continuar !(lin = t2.remove)
        nivel = txt2(lin), lin = "i_" + txt1(lin)
        nivel == 0 && (nivel = [lin]:nivel)
        valor = lucro * [lin]:valor
        lin = txtcopiamai([lin]:descloja ?? [lin]:descnome, "A")
        lin = "\b\c2" + linha + (linha < 10 ? "\b. " : "\b.") + lin
        lin += txtesp(40 - inttotal(lin + valor)) + "$" + valor
        nivel && (lin += "   N" + nivel)
        t.addfim(lin), linha++
      efim
    fimse
# Itens que possui e itens em uma sala
    se 1
      listaobj e
      p.lojainv && e.addfim(p.dentro1)
      epara e.addfim($s_[p.lojasala].dentro1), e, e.ini.remove
        nivel = e.objini.pnivel
        valor = lucro * e.objini.valor
        lin = "\b\c2" + linha + (linha < 10 ? "\b. " : "\b.")
        lin += txtcopiamai(e.objini.descnome, "A")
        lin += txtesp(40 - inttotal(lin + valor)) + "$" + valor
        nivel && (lin += "   N" + nivel)
        lin += "   x" + e.objini.objtot
        t.addfim(lin), linha++
      efim
    fimse
# Casas
    se $a_[p.lojacasa]
      lin = ""
      prog prg
      epara prg.iniclasse("c_" + p.lojacasa), prg.lin, prg.depois
        sair $[prg.texto].area != p.lojacasa
        continuar $[prg.texto].nomejog
        valor = lucro * $[prg.texto].valor
        lin = "\b\c2" + linha + (linha < 10 ? "\b. " : "\b.")
        lin += txtcopiamai($[prg.texto].nome, "A")
        lin += txtesp(40 - inttotal(lin + valor)) + "$" + valor
        t.addfim(lin), linha++
      efim
      !lin && t.addfim("Não há nenhuma casa à venda.")
    fimse
# Chaves
    se $a_[p.lojachave]
      indiceitem item
      se item.obj("cj " + txt2(arg0.sock.cnome) + " " + p.lojachave)
        valor = lucro * config:casachave
        lin = "\b\c2" + linha + (linha < 10 ? "\b. " : "\b.") + "Chave da casa"
        lin += txtesp(40 - inttotal(lin + valor)) + "$" + valor
        t.addfim(lin), linha++
        valor = lucro * config:casafechadura
        lin = "\b\c2" + linha + (linha < 10 ? "\b. " : "\b.") + "Fechadura da casa"
        lin += txtesp(40 - inttotal(lin + valor)) + "$" + valor
        t.addfim(lin), linha++
      senao
        t.addfim("Você não possui nenhuma casa nessa cidade.")
      fimse
    fimse
  efim
  ret t.linhas, arg0.msg2(t.remove(1000))
  arg0.msg("Não há vendedores aqui.")

func escr2 # Consultar um item
  uint32 valor # Valor do item
  uint32 nivel # Nível do item
  real2 lucro # Para calcular o lucro do vendedor
  txt200 lin
  int32 linha
  listaobj l
  nomeobj n
  l.addfim(arg0.dono.dentro2), n.ini(arg1, 1)
  epara l.remove(arg0), l, l.ini.remove
    refvar p = ref(l.objini) # Personagem que está sendo verificado
    continuar !(p.lojaitem || p.lojainv || $s_[p.lojasala] || $a_[p.lojacasa] || $a_[p.lojachave]\
)
    continuar negociar_checa(arg0, p)
    continuar evento(arg0, p)
    lucro = (100 + p.taxavenda) / 100
# Itens fixos - lojaitem
    textotxt t2
    epara t2.addfim(p.lojaitem), t2.linhas, t2.remove
      continuar !t2.ini.texto
      lin = "i_" + txt1(t2.ini.texto)
      continuar txt(++linha) != arg1 && !n.nome([lin]:nome, 1)
      ref r
      r = criar(lin), apagar(r)
      valor = lucro * r.valor
      t2.limpar
      t2.addfim("\b\c6" + txtcopiamai(p.descnome, "A") + " mostra:\b")
      lin = txtcopiamai(r.descnome, "A") + (r.pnivel ? ", nível " + r.pnivel)
      t2.addfim(lin + ", custa $" + valor + ".")
      $comando_identificar.txtident(arg0, r, t2)
      ret arg0.msg2(t2.remove(1000))
    efim
# Itens que possui e itens em uma sala
    se 1
      listaobj e
      p.lojainv && e.addfim(p.dentro1)
      epara e.addfim($s_[p.lojasala].dentro1), e, e.ini.remove
        continuar txt(++linha) != arg1 && !n.nome(e.objini.ident, 1)
        nivel = e.objini.pnivel
        valor = lucro * e.objini.valor
        t2.limpar
        t2.addfim("\b\c6" + txtcopiamai(p.descnome, "A") + " mostra:\b")
        lin = txtcopiamai(e.objini.descnome, "A")
        e.objini.pnivel && (lin += ", nível " + e.objini.pnivel)
        t2.addfim(lin + ", custa $" + valor + ".")
        $comando_identificar.txtident(arg0, e.objini, t2)
        ret arg0.msg2(t2.remove(1000))
      efim
    fimse
# Casas
    se $a_[p.lojacasa]
      lin = ""
      prog prg
      ref r
      epara prg.iniclasse("c_" + p.lojacasa), prg.lin, prg.depois
        r = $[prg.texto]
        sair r.area != p.lojacasa
        continuar r.nomejog || txt(++linha) != arg1 && !n.nome(r.ident, 1)
        valor = lucro * r.valor
        t2.limpar
        t2.addfim("\b\c6" + txtcopiamai(p.descnome, "A") + " mostra:\b")
        t2.addfim(r.descloja + ", custa $" + valor + ".")
        r.desc && t2.addfim(r.desc)
        ret arg0.msg2(t2.remove(1000))
      efim
    fimse
# Chave e fechadura da casa
    se $a_[p.lojachave]
      indiceitem item
      se !item.obj("cj " + txt2(arg0.sock.cnome) + " " + p.lojachave)
      senao txt(++linha) == arg1 || n.nome("chave da casa", 1)
        valor = (100 + p.taxavenda) / 100 * config:casachave
        t2.limpar
        t2.addfim("\b\c6" + txtcopiamai(p.descnome, "A") + " explica:\b")
        t2.addfim("Faço uma cópia da chave da sua casa por $" + valor + ".")
        ret arg0.msg2(t2.remove(1000))
      senao txt(++linha) == arg1 || n.nome("fechadura da casa", 1)
        valor = (100 + p.taxavenda) / 100 * config:casafechadura
        t2.limpar
        t2.addfim("\b\c6" + txtcopiamai(p.descnome, "A") + " explica:\b")
        t2.addfim("Troco a fechadura da sua casa por $" + valor + ".")
        ret arg0.msg2(t2.remove(1000))
      fimse
    fimse
  efim
  arg0.msg("Ninguém vende isso aqui.")

func evento # Gera evento para arg0 e arg1
  listaobj l
  txt100 t
  epara l.addfim(arg0.evento), l, l.ini.remove
    ret t = l.objini.cmd_comprar(arg0, arg1, arg0), t
  efim
  epara l.addfim(arg1.evento), l, l.ini.remove
    ret t = l.objini.cmd_comprar(arg0, arg1, arg1), t
  efim
